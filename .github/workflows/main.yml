name: Build & Deploy chronos-auth

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and deploy chronos-auth
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Build the application
        run: mvn -B clean package -DskipTests --file pom.xml

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/chronos-auth:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/chronos-auth:latest

#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ env.AWS_REGION }}
#            - name: Fill in the new image ID in the Amazon ECS task definition
#              id: task-def
#              uses: aws-actions/amazon-ecs-render-task-definition@v1
#              with:
#                task-definition: ${{ env.ECS_TASK_DEFINITION }}
#                container-name: ${{ env.CONTAINER_NAME }}
#                image: ${{ env.CONTAINER_IMAGE }}
#            - name: Deploy Amazon ECS task definition
#              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#              with:
#                task-definition: ${{ steps.task-def.outputs.task-definition }}
#                service: ${{ env.ECS_SERVICE }}
#                cluster: ${{ env.ECS_CLUSTER }}
#                wait-for-service-stability: true